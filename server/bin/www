#!/usr/bin/env node

import http from 'http'

import app, { PORT } from '../app'

const onError = (error) => {
	if (error.syscall !== 'listen') {
		throw error
	}

	const bind = typeof PORT === 'string' ? 'Pipe ' + PORT : 'Port ' + PORT

	switch (error.code) {
		case 'EACCES':
			console.error(bind + ' requires elevated privileges')
			process.exit(1)
			break
		case 'EADDRINUSE':
			console.error(bind + ' is already in use')
			process.exit(1)
			break
		default:
			throw error
	}
}

const onListening = () => {
	const addr = server.address()
	const bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port

	console.log('Listening on ' + bind)
}

const server = http.createServer(app)

server.listen(PORT)
server.on('error', onError)
server.on('listening', onListening)
